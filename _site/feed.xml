<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rakib Hasan's Blog</title>
    <description>Rakib's Learning &amp; Blogs</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 18 Nov 2017 11:17:58 +0600</pubDate>
    <lastBuildDate>Sat, 18 Nov 2017 11:17:58 +0600</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Amazon S3 Direct File Upload From Client Browser Private Key Disclosure</title>
        <description>&lt;h2 id=&quot;amazon-s3-direct-file-upload-from-client-browser---private-key-disclosure&quot;&gt;Amazon S3 direct file upload from client browser - private key disclosure&lt;/h2&gt;
&lt;p&gt;Create an Amazon S3 bucket and configure CORS
CORS needs to be configured on the Amazon S3 bucket to be accessed directly from JavaScript in the browser.
Navigate to the Amazon S3 console.
Choose an existing bucket or create a new bucket if desired. Note the bucket name and bucket region for later use in the application.&lt;/p&gt;

&lt;p&gt;Click the Properties tab, open the Permissions section, and click Edit CORS Configuration.&lt;/p&gt;

&lt;p&gt;Copy the below XML into the text box and click Save.&lt;/p&gt;

&lt;hr /&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;CORSConfiguration&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://s3.amazonaws.com/doc/2006-03-01&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

   &lt;span class=&quot;nt&quot;&gt;&amp;lt;CORSRule&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedOrigin&amp;gt;&lt;/span&gt;*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedOrigin&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedMethod&amp;gt;&lt;/span&gt;GET&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedMethod&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedMethod&amp;gt;&lt;/span&gt;PUT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedMethod&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedMethod&amp;gt;&lt;/span&gt;POST&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedMethod&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedMethod&amp;gt;&lt;/span&gt;DELETE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedMethod&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedHeader&amp;gt;&lt;/span&gt;*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedHeader&amp;gt;&lt;/span&gt;

   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/CORSRule&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/CORSConfiguration&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can upload files on AWS S3 using a server side solution, but in case of larger files it is advisable to use a client side solution. You can probably use JavaScript file upload feature of AWS S3. This is simple three step feature as described below:&lt;/p&gt;

&lt;p&gt;Step 1 : In the head section of your page include javascript sdk and specify your keys like this:&lt;/p&gt;

&lt;script src=&quot;https://sdk.amazonaws.com/js/aws-sdk-2.1.24.min.js&quot;&gt;&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    AWS.config.update({
        accessKeyId : 'ACCESS_KEY',
        secretAccessKey : 'SECRET_KEY'
    });
    AWS.config.region = 'AWS_REGION';
&lt;/script&gt;

&lt;p&gt;Step 2 : Now create a simple html form with a file input.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;form id=&quot;fileUploadForm&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&amp;gt;
&amp;lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot; value=&quot;dataFile&quot; required=&quot;&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Step 3 : Now upload your input file to S3&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(&quot;#fileUploadForm&quot;).submit(function() {
var bucket = new AWS.S3({params: {Bucket: 'BUCKET_NAME'}});
var fileChooser = document.getElementById('file');
var file = fileChooser.files[0];
if (file) {
var params = {Key: 'FILE_NAME', ContentType: file.type, Body: file};
bucket.upload(params).on('httpUploadProgress', function(evt) {
console.log(&quot;Uploaded :: &quot; + parseInt((evt.loaded * 100) / evt.total)+'%');
}).send(function(err, data) {
alert(&quot;File uploaded successfully.&quot;);
});
}
return false;
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To upload the file successfully, you need to enable CORS configuration on S3.&lt;/p&gt;

&lt;p&gt;Generally, it is not advisable to display your keys directly on page, so you can use Amazon Cognito or web identity federation feature.&lt;/p&gt;

&lt;p&gt;Using Cognito service&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;AWS S3 File Upload&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://sdk.amazonaws.com/js/aws-sdk-2.1.12.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file-chooser&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;upload-button&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Upload to S3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;results&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;region&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ap-south-1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1. Enter your region&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;credentials&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CognitoIdentityCredentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;IdentityPoolId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ap-south-1:79a1d229-dd96-4c05-a7de-ef9d58976122'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2. Enter your identity pool&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bucketName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test-marcom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Enter your bucket name&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bucket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;S3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bucketName&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileChooser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'file-chooser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'upload-button'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'results'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileChooser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testing/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;ContentType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;ACL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'public-read'&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;putObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ERROR: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;listObjs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Nothing to upload.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listObjs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prefix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listObjects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;Prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prefix&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ERROR: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objKeys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;objKeys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 01 Jun 2017 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/2017/06/01/amazon-s3-direct-file-upload-from-client-browser-private-key-disclosure/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/06/01/amazon-s3-direct-file-upload-from-client-browser-private-key-disclosure/</guid>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Some Types Of Request Response Params In Spring</title>
        <description>&lt;h2 id=&quot;requestresponse-paramters-in-spring-method&quot;&gt;Request/Response paramters in spring method&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;HttpSession&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@PathVariable&lt;/strong&gt; annotated parameters for access to URI template variables.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@RequestMapping(value=&quot;/owners/{ownerId}&quot;, method=RequestMethod.GET)
public String findOwner(@PathVariable String ownerId, Model model) {
Owner owner = ownerService.findOwner(ownerId);  
model.addAttribute(&quot;owner&quot;, owner);  
return &quot;displayOwner&quot;; 
}
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@RequestHeader&lt;/strong&gt; annotated parameters for access to specific Servlet request HTTP headers.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@RequestBody&lt;/strong&gt; annotated parameters for access to the HTTP request body.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@RequestMapping(value = &quot;/something&quot;, method = RequestMethod.PUT)
public void handle(@RequestBody String body, Writer writer) throws IOException {
writer.write(body);
}
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@RequestPart&lt;/strong&gt; annotated parameters for access to the content of a “multipart/form-data” request part.
```
@RequestMapping(value=”/someUrl”, method = RequestMethod.POST)
public String onSubmit(@RequestPart(“meta-data”) MetaData metadata,
                     @RequestPart(“file-data”) MultipartFile file) {
  // …&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;}&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
* **HttpEntity&amp;lt;?&amp;gt;** parameters for access to the Servlet request HTTP headers and contents.

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;@RequestMapping(“/something”)
public ResponseEntity&lt;String&gt; handle(HttpEntity&amp;lt;byte[]&amp;gt; requestEntity) throws UnsupportedEncodingException {
  String requestHeader = requestEntity.getHeaders().getFirst(&quot;MyRequestHeader&quot;));
  byte[] requestBody = requestEntity.getBody();
  // do something with request header and body&lt;/String&gt;&lt;/p&gt;

&lt;p&gt;HttpHeaders responseHeaders = new HttpHeaders();
  responseHeaders.set(“MyResponseHeader”, “MyValue”);
  return new ResponseEntity&lt;String&gt;(&quot;Hello World&quot;, responseHeaders, HttpStatus.CREATED);
}
```&lt;/String&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Apr 2017 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/2017/04/28/some-types-of-request-response-params-in-spring/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/04/28/some-types-of-request-response-params-in-spring/</guid>
        
        
        <category>spring</category>
        
      </item>
    
      <item>
        <title>Spring Boot Application Live Reload Hot Swap With Intellij Idea</title>
        <description>&lt;h2 id=&quot;spring-boot-application-live-reload-hot-swap-with-intellij-idea&quot;&gt;Spring Boot Application Live Reload (Hot Swap) With Intellij IDEA&lt;/h2&gt;
&lt;p&gt;While developing Spring Boot Applications using Intellij IDEA, it was so annoying to restart the Spring Boot app after each and every change. Spring Boot provides live reload (hot swap) of application out of the box using the following dependency.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-boot-devtools&amp;lt;/artifactId&amp;gt;
    &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But it didn’t live reload the application/container, and the hot deployment didn’t work for changes. Further researching found that following changes needed to be done in order the hot deployment to be worked correctly.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Open the Settings –&amp;gt; Build-Execution-Deployment –&amp;gt; Compiler&lt;/p&gt;

    &lt;p&gt;and enable the Make Project Automatically.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then press ctrl+shift+A and search for the registry. In the registry, make the following configuration enabled.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;compiler.automake.allow.when.app.running
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Reload Static content (html, css, js)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Add this configuration to your Spring Boot Maven Plugin:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;configuration&amp;gt;
    &amp;lt;addResources&amp;gt;true&amp;lt;/addResources&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Restart the IDE.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it! Now the hot deployment works, and you don’t have to restart manually after each and every change.&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Apr 2017 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/2017/04/28/Spring-Boot-Application-Live-Reload-Hot-Swap-With-Intellij-IDEA/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/04/28/Spring-Boot-Application-Live-Reload-Hot-Swap-With-Intellij-IDEA/</guid>
        
        
        <category>spring</category>
        
      </item>
    
      <item>
        <title>Sementic Ui Calender Set Date Backend Frontend</title>
        <description>&lt;h2 id=&quot;sementic-ui-calender&quot;&gt;Sementic UI Calender&lt;/h2&gt;
&lt;p&gt;Calendar module for Semantic UI. See &lt;a href=&quot;https://jsbin.com/ruqakehefa/&quot;&gt;https://jsbin.com/ruqakehefa/&lt;/a&gt; for example usage.
&lt;a href=&quot;https://github.com/mdehoog/Semantic-UI-Calendar&quot;&gt;Github Link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Install using bower:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bower install --save semantic-ui-calendar&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install using npm:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save semantic-ui-calendar&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Include javascript and css in html:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &amp;lt;script type=&quot;text/javascript&quot; src=&quot;/bower_components/semantic-ui-calendar/dist/calendar.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
   &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/bower_components/semantic-ui-calendar/dist/calendar.min.css&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&quot;basic-html&quot;&gt;Basic HTML&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;ui calendar&quot; id=&quot;date&quot;&amp;gt;
    &amp;lt;div class=&quot;ui input left icon&quot;&amp;gt;
        &amp;lt;i class=&quot;calendar icon&quot;&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;input name=&quot;date&quot; type=&quot;text&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&quot;javascript-calling&quot;&gt;Javascript Calling&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(&quot;#date&quot;).calendar({
    type: 'date',
    parser: app.dateParser,
    parseFormat: 'dd/MM/yyyy',
    formatter: app.dateFormatter,
    minDate: $(&quot;#date&quot;).data('min-date') ? kendo.parseDate($(&quot;#date&quot;).data('min-date'), 'dd/MM/yyyy') : null,
    maxDate: $(&quot;#date&quot;).data('max-date') ? kendo.parseDate($(&quot;#date&quot;).data('max-date'), 'dd/MM/yyyy') : null,
});
var app = {
    dateParser: {
        date: function (txtDate, settings) {
            if (!txtDate) return null;
            if (settings.parseFormat) {
                return kendo.parseDate(txtDate, settings.parseFormat);
            } else {
                return kendo.parseDate(txtDate, &quot;dd/MM/yyyy&quot;);
            }
        }
    }
};
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;trigger-angular-value-on-change-calender&quot;&gt;Trigger angular value on change Calender&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;ui calendar&quot; id=&quot;date&quot;&amp;gt;
    &amp;lt;div class=&quot;ui input left icon&quot;&amp;gt;
        &amp;lt;i class=&quot;calendar icon&quot;&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;input name=&quot;date&quot; type=&quot;text&quot; ng-model=&quot;angularController.element&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

$(&quot;#date&quot;).calendar({
    type: 'date',
    parser: app.dateParser,
    parseFormat: 'dd/MM/yyyy',
    formatter: app.dateFormatter,
    minDate: $(&quot;#date&quot;).data('min-date') ? kendo.parseDate($(&quot;#date&quot;).data('min-date'), 'dd/MM/yyyy') : null,
    maxDate: $(&quot;#dateOfCheque&quot;).data('max-date') ? kendo.parseDate($(&quot;#date&quot;).data('max-date'), 'dd/MM/yyyy') : null,
    onChange: function (date, text, mode) {
    var $scope = angular.element($(&quot;#date&quot;)).scope();
    $scope.$apply(function() {
        $scope.angularController.element = text;
    });
    }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;changed-value-from-javascript&quot;&gt;Changed value from Javascript&lt;/h3&gt;
&lt;p&gt;calendar(‘set date’, Javascript native Date object)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $('#date').calendar('set date', new Date());
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;initialized-backend-date-to-calender&quot;&gt;Initialized Backend Date to Calender&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;ui calendar&quot; id=&quot;date&quot;&amp;gt;
    &amp;lt;div class=&quot;ui input left icon&quot;&amp;gt;
        &amp;lt;i class=&quot;calendar icon&quot;&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;input name=&quot;date&quot; type=&quot;text&quot; value=&quot;${g.formatDate(date: new Date(), format: 'dd/MM/yyyy')}&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 28 Apr 2017 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/2017/04/28/sementic-ui-calender-set-date-backend-frontend/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/04/28/sementic-ui-calender-set-date-backend-frontend/</guid>
        
        
        <category>sementic-ui</category>
        
      </item>
    
      <item>
        <title>Learning Markdown For Your Site</title>
        <description>&lt;p&gt;Markdown is a lightweight and easy-to-use syntax for styling all forms of writing on the GitHub platform.&lt;/p&gt;

&lt;h3 id=&quot;what-you-will-learn&quot;&gt;What you will learn:&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;How the Markdown format makes styled collaborative editing easy&lt;/li&gt;
  &lt;li&gt;How Markdown differs from traditional formatting approaches&lt;/li&gt;
  &lt;li&gt;How to use Markdown to format text&lt;/li&gt;
  &lt;li&gt;How to leverage GitHub’s automatic Markdown rendering&lt;/li&gt;
  &lt;li&gt;How to apply GitHub’s unique Markdown extensions&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;what-is-markdown&quot;&gt;What is Markdown?&lt;/h3&gt;

&lt;p&gt;Markdown is a way to style text on the web. You control the display of the document; formatting words as bold or italic, adding images, and creating lists are just a few of the things we can do with Markdown. Mostly, Markdown is just regular text with a few non-alphabetic characters thrown in, like # or *.&lt;/p&gt;

&lt;p&gt;You can use Markdown most places around GitHub:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gists&lt;/li&gt;
  &lt;li&gt;Comments in Issues and Pull Requests&lt;/li&gt;
  &lt;li&gt;Files with the .md or .markdown extension&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information, see “Writing on GitHub” in the GitHub Help.&lt;/p&gt;

&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;… to Get&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*Italic*&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;Italic&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;**Bold**&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Bold&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[Link](http://a.com)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://a.com&quot;&gt;Link&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;![Image](http://url/a.png)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;http://url/a.png&quot; alt=&quot;Image&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; Blockquote&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&amp;gt; Blockquote&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;* List&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;* List&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Horizontal Rule&lt;/td&gt;
      &lt;td&gt;Horizontal Rule&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;—&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Headers&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# H1
## H2
### H3
#### H4
##### H5
###### H6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h1 id=&quot;h1&quot;&gt;H1&lt;/h1&gt;
&lt;h2 id=&quot;h2&quot;&gt;H2&lt;/h2&gt;
&lt;h3 id=&quot;h3&quot;&gt;H3&lt;/h3&gt;
&lt;h4 id=&quot;h4&quot;&gt;H4&lt;/h4&gt;
&lt;h5 id=&quot;h5&quot;&gt;H5&lt;/h5&gt;
&lt;h6 id=&quot;h6&quot;&gt;H6&lt;/h6&gt;

&lt;h4 id=&quot;images&quot;&gt;Images&lt;/h4&gt;

&lt;p&gt;Here’s our logo (hover to see the title text):&lt;/p&gt;

&lt;p&gt;Inline-style:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png &quot;Logo Title Text 1&quot;)

Reference-style: 
![alt text][logo]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png&quot; alt=&quot;alt text&quot; title=&quot;Logo Title Text 1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;reference-link&quot;&gt;Reference Link&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#emphasis&quot;&gt;Markdown Cheatsheet&lt;/a&gt;, 
&lt;a href=&quot;https://help.ghost.org/hc/en-us/articles/224410728-Markdown-Guide&quot;&gt;Markdown Guide&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Jan 2017 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/2017/01/01/learning-markdown-for-your-site/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/01/learning-markdown-for-your-site/</guid>
        
        
        <category>Markdown</category>
        
      </item>
    
      <item>
        <title>Starting Project With Machine Learning</title>
        <description>&lt;h2 id=&quot;machine-learing&quot;&gt;Machine Learing&lt;/h2&gt;
&lt;p&gt;Machine learning is a type of artificial intelligence (AI) that provides computers with the ability to learn without being explicitly programmed. Machine learning focuses on the development of computer programs that can change when exposed to new data.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A computer program is said to learn from experience E with respect to some task T and some performance measure P,
 if its performance on T, as measured by P, improves with experience E.” 
 -- Tom Mitchell, Carnegie Mellon University 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So if you want your program to predict, for example, traffic patterns at a busy intersection (task T), you can run it through a machine learning algorithm with data about past traffic patterns (experience E) and, if it has successfully “learned”, it will then do better at predicting future traffic patterns (performance measure P).&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ML solves problems that cannot be solved by numerical means alone. 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To break down the definition for easier understanding I should mention some factors that we should know as follows:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Method means technique or way to do&lt;/li&gt;
  &lt;li&gt;Data means set of information&lt;/li&gt;
  &lt;li&gt;Existing data means data already we have for any task.&lt;/li&gt;
  &lt;li&gt;Algorithm - Step by step set of operations/command to be performed&lt;/li&gt;
  &lt;li&gt;Automatically – Something is done or gained without working again.&lt;/li&gt;
  &lt;li&gt;Model - Data schema that learn from data iteratively&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 28 Dec 2016 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/2016/12/28/starting-project-with-machine-learning/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/28/starting-project-with-machine-learning/</guid>
        
        
        <category>Machine-Learning</category>
        
      </item>
    
      <item>
        <title>Software Development Life Cycle</title>
        <description>&lt;h2 id=&quot;software-development-life-cycle&quot;&gt;Software Development Life Cycle&lt;/h2&gt;

&lt;p&gt;Software Development Life Cycle (SDLC) is a process used by the software industry to design, develop and test high quality softwares. The SDLC aims to produce a high-quality software that meets or exceeds customer expectations, reaches completion within times and cost estimates.&lt;/p&gt;

&lt;h3 id=&quot;what-is-sdlc&quot;&gt;What is SDLC?&lt;/h3&gt;

&lt;p&gt;SDLC is a process followed for a software project, within a software organization. It consists of a detailed plan describing how to develop, maintain, replace and alter or enhance specific software. The life cycle defines a methodology for improving the quality of software and the overall development process.&lt;/p&gt;

&lt;p&gt;The following figure is a graphical representation of the various stages of a typical SDLC.&lt;/p&gt;

&lt;p&gt;SDLC Models&lt;/p&gt;

&lt;p&gt;There are various software development life cycle models defined and designed which are followed during the software development process. These models are also referred as Software Development Process Models”. Each process model follows a Series of steps unique to its type to ensure success in the process of software development.&lt;/p&gt;

&lt;p&gt;Following are the most important and popular SDLC models followed in the industry &amp;amp;miuns;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Waterfall Model&lt;/li&gt;
  &lt;li&gt;Iterative Model&lt;/li&gt;
  &lt;li&gt;Spiral Model&lt;/li&gt;
  &lt;li&gt;V-Model&lt;/li&gt;
  &lt;li&gt;Big Bang Model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other related methodologies are Agile Model, RAD Model, Rapid Application Development and Prototyping Models.&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Dec 2016 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/2016/12/26/software-development-life-cycle/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/26/software-development-life-cycle/</guid>
        
        
        <category>SDLC</category>
        
      </item>
    
      <item>
        <title>Software Development Life Cycle-Model</title>
        <description>&lt;h2 id=&quot;waterfall-model---design&quot;&gt;Waterfall Model - Design&lt;/h2&gt;

&lt;p&gt;Waterfall approach was first SDLC Model to be used widely in Software Engineering to ensure success of the project. In “The Waterfall” approach, the whole process of software development is divided into separate phases. In this Waterfall model, typically, the outcome of one phase acts as the input for the next phase sequentially.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../static/img/sdlc_waterfall_model.jpg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 26 Dec 2016 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/2016/12/26/sdlc-models/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/26/sdlc-models/</guid>
        
        
        <category>SDLC</category>
        
      </item>
    
      <item>
        <title>Jekyll</title>
        <description>&lt;h2 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h2&gt;
&lt;p&gt;Jekyll is a simple, blog-aware, static site generator. It takes a template directory containing raw text files in various formats, runs it through a converter (like Markdown) and our Liquid renderer, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server. Jekyll also happens to be the engine behind GitHub Pages, which means you can use Jekyll to host your project’s page, blog, or website from GitHub’s servers for free.&lt;/p&gt;

&lt;p&gt;##Installation via RubyInstallerPermalink&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt; is a self-contained Windows-based installer that includes the Ruby language, an execution environment, important documentation, and more.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Download and Install a package manager version from &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller Downloads&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;If problem to download MSYS2, can download manually from &lt;a href=&quot;https://sourceforge.net/projects/msys2/files/Base/x86_64/msys2-x86_64-20161025.exe/download&quot;&gt;MSYS2&lt;/a&gt; &amp;amp; install it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install Jekyll and Bundler via a command prompt window:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install jekyll bundler&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Check if Jekyll installed properly:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll -v&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;To start a new project named my_blog, just run:&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new my_blog&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;run jekyll project -&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;or&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;exception&quot;&gt;Exception&lt;/h2&gt;
&lt;p&gt;if any problem like&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Could not find public_suffix-2.0.4 in any of the sources (Bundler::GemNotFound)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;for version miss matching just update the gem-&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 26 Dec 2016 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/2016/12/26/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/26/welcome-to-jekyll/</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Exception Handling</title>
        <description>&lt;h2 id=&quot;exception-handling&quot;&gt;Exception Handling&lt;/h2&gt;

&lt;p&gt;Hierarchy of Java Exception classes&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Throwable
    &lt;ul&gt;
      &lt;li&gt;Exception
        &lt;ul&gt;
          &lt;li&gt;IOException&lt;/li&gt;
          &lt;li&gt;SQLException&lt;/li&gt;
          &lt;li&gt;ClassNotFoundException&lt;/li&gt;
          &lt;li&gt;RuntimeException
            &lt;ul&gt;
              &lt;li&gt;ArithmeticException&lt;/li&gt;
              &lt;li&gt;NullPointerException&lt;/li&gt;
              &lt;li&gt;NumberFormateException&lt;/li&gt;
              &lt;li&gt;IndexOutOfBoundException
                &lt;ul&gt;
                  &lt;li&gt;ArrayIndexOutOfBoundException&lt;/li&gt;
                  &lt;li&gt;StringIndexOutOfBoundException&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Error
        &lt;ul&gt;
          &lt;li&gt;StackOverFlowError&lt;/li&gt;
          &lt;li&gt;VirtualMachineError&lt;/li&gt;
          &lt;li&gt;OutOfMemoryError&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Type of Exception&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Checked Exception
 -Those type of exception extends Throwable except RuntimeException &amp;amp; are checked at compile time. Example: IOException, SQLException&lt;/li&gt;
  &lt;li&gt;Unchecked Exception
    &lt;ul&gt;
      &lt;li&gt;Those type of Exception which are not checked at runtime. Example: ArithmeticException, NullPointerException, NumberFormateException&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Error
    &lt;ul&gt;
      &lt;li&gt;Error is irrecoverable e.g. OutOfMemoryError, VirtualMachineError, AssertionError etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Common scenarios where exceptions may occur&lt;/p&gt;

&lt;p&gt;There are given some scenarios where unchecked exceptions can occur. They are as follows:
1) Scenario where ArithmeticException occurs&lt;/p&gt;

&lt;p&gt;If we divide any number by zero, there occurs an ArithmeticException.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int a=50/0;//ArithmeticException  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2) Scenario where NullPointerException occurs&lt;/p&gt;

&lt;p&gt;If we have null value in any variable, performing any operation by the variable occurs an NullPointerException.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;String s=null;  
System.out.println(s.length());//NullPointerException  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3) Scenario where NumberFormatException occurs&lt;/p&gt;

&lt;p&gt;The wrong formatting of any value, may occur NumberFormatException. Suppose I have a string variable that have characters, converting this variable into digit will occur NumberFormatException.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;String s=&quot;abc&quot;;  
int i=Integer.parseInt(s);//NumberFormatException  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4) Scenario where ArrayIndexOutOfBoundsException occurs&lt;/p&gt;

&lt;p&gt;If you are inserting any value in the wrong index, it would result ArrayIndexOutOfBoundsException as shown below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int a[]=new int[5];  
a[10]=50; //ArrayIndexOutOfBoundsException  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;java-exception-handling-keywords&quot;&gt;Java Exception Handling Keywords&lt;/h3&gt;

&lt;p&gt;There are 5 keywords used in java exception handling.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;try
catch
finally
throw
throws
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h6 id=&quot;the-jvm-firstly-checks-whether-the-exception-is-handled-or-not-if-exception-is-not-handled-jvm-provides-a-default-exception-handler-that-performs-the-following-tasks&quot;&gt;The JVM firstly checks whether the exception is handled or not. If exception is not handled, JVM provides a default exception handler that performs the following tasks:&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;Prints out exception description.&lt;/li&gt;
  &lt;li&gt;Prints the stack trace (Hierarchy of methods where the exception occurred).&lt;/li&gt;
  &lt;li&gt;Causes the program to terminate.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;but-if-exception-is-handled-by-the-application-programmer-normal-flow-of-the-application-is-maintained-ie-rest-of-the-code-is-executed&quot;&gt;But if exception is handled by the application programmer, normal flow of the application is maintained i.e. rest of the code is executed.&lt;/h6&gt;

&lt;h4 id=&quot;java-finally-block&quot;&gt;Java finally block&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Java finally block is a block that is used to execute important code such as closing connection, stream etc.&lt;/li&gt;
  &lt;li&gt;Java finally block is always executed whether exception is handled or not.&lt;/li&gt;
  &lt;li&gt;Java finally block is&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;for-each-try-block-there-can-be-zero-or-more-catch-blocks-but-only-one-finally-block&quot;&gt;For each try block there can be zero or more catch blocks, but only one finally block.&lt;/h4&gt;

&lt;h2 id=&quot;java-exception-propagation&quot;&gt;Java Exception propagation&lt;/h2&gt;
&lt;p&gt;An exception is first thrown from the top of the stack and if it is not caught, it drops down the call stack to the previous method,If not caught there, the exception again drops down to the previous method, and so on until they are caught or until they reach the very bottom of the call stack.This is called exception propagation.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class TestExceptionPropagation1{  
         void m(){  
           int data=50/0;  
         }  
         void n(){  
           m();  
         }  
         void p(){  
          try{  
           n();  
          }catch(Exception e){System.out.println(&quot;exception handled&quot;);}  
         }  
         public static void main(String args[]){  
          TestExceptionPropagation1 obj=new TestExceptionPropagation1();  
          obj.p();  
          System.out.println(&quot;normal flow...&quot;);  
         }  
       }  
       
       Output:exception handled
              normal flow... 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;by-default-unchecked-exceptions-are-forwarded-in-calling-chain-propagated&quot;&gt;By default Unchecked Exceptions are forwarded in calling chain (propagated).&lt;/h4&gt;
&lt;h4 id=&quot;by-default-checked-exceptions-are-not-forwarded-in-calling-chain-propagated&quot;&gt;By default, Checked Exceptions are not forwarded in calling chain (propagated).&lt;/h4&gt;

&lt;p&gt;Program which describes that checked exceptions are not propagated&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    class TestExceptionPropagation2{  
      void m(){  
        throw new java.io.IOException(&quot;device error&quot;);//checked exception  
      }  
      void n(){  
        m();  
      }  
      void p(){  
       try{  
        n();  
       }catch(Exception e){System.out.println(&quot;exception handeled&quot;);}  
      }  
      public static void main(String args[]){  
       TestExceptionPropagation2 obj=new TestExceptionPropagation2();  
       obj.p();  
       System.out.println(&quot;normal flow&quot;);  
      }  
    }  
    
    Output:Compile Time Error
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ava throws keyword&lt;/p&gt;

&lt;p&gt;The Java throws keyword is used to declare an exception. It gives an information to the programmer that there may occur an exception so it is better for the programmer to provide the exception handling code so that normal flow can be maintained.&lt;/p&gt;

&lt;p&gt;Exception Handling is mainly used to handle the checked exceptions. If there occurs any unchecked exception such as NullPointerException, it is programmers fault that he is not performing check up before the code being used.
Syntax of java throws&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;return_type method_name() throws exception_class_name{  
//method code  
}  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Which exception should be declared&lt;/p&gt;

&lt;p&gt;Ans) checked exception only, because:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unchecked Exception: under your control so correct your code.
error: beyond your control e.g. you are unable to do anything if there occurs VirtualMachineError or StackOverflowError.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;difference-between-throw-and-throws-in-java&quot;&gt;Difference between throw and throws in Java&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;No.&lt;/th&gt;
      &lt;th&gt;throw&lt;/th&gt;
      &lt;th&gt;throws&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1)&lt;/td&gt;
      &lt;td&gt;Java throw keyword is used to explicitly throw an exception.&lt;/td&gt;
      &lt;td&gt;Java throws keyword is used to declare an exception.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2)&lt;/td&gt;
      &lt;td&gt;Checked exception cannot be propagated using throw only.&lt;/td&gt;
      &lt;td&gt;Checked exception can be propagated with throws.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3)&lt;/td&gt;
      &lt;td&gt;Throw is followed by an instance.&lt;/td&gt;
      &lt;td&gt;Throws is followed by class.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4)&lt;/td&gt;
      &lt;td&gt;Throw is used within the method.&lt;/td&gt;
      &lt;td&gt;Throws is used with the method signature.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5)&lt;/td&gt;
      &lt;td&gt;You cannot throw multiple exceptions.&lt;/td&gt;
      &lt;td&gt;You can declare multiple exceptions e.g. public void method()throws IOException,SQLException.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Difference between final, finally and finalize&lt;/p&gt;

&lt;p&gt;There are many differences between final, finally and finalize. A list of differences between final, finally and finalize are given below:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;No.&lt;/th&gt;
      &lt;th&gt;final&lt;/th&gt;
      &lt;th&gt;finally&lt;/th&gt;
      &lt;th&gt;finalize&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1)&lt;/td&gt;
      &lt;td&gt;Final is used to apply restrictions on class, method and variable.&lt;/td&gt;
      &lt;td&gt;Final class can’t be inherited, final method can’t be overridden and final variable value can’t be changed.&lt;/td&gt;
      &lt;td&gt;Finally is used to place important code, it will be executed whether exception is handled or not.	Finalize is used to perform clean up processing just before object is garbage collected.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2)&lt;/td&gt;
      &lt;td&gt;Final is a keyword.&lt;/td&gt;
      &lt;td&gt;Finally is a block.&lt;/td&gt;
      &lt;td&gt;Finalize is a method.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Java throw example&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;void m(){  
throw new ArithmeticException(&quot;sorry&quot;);  
}  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Java throws example&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;void m()throws ArithmeticException{  
//method code  
}  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Java throw and throws example&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;void m()throws ArithmeticException{  
throw new ArithmeticException(&quot;sorry&quot;);  
}  


    }}  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 26 Dec 2016 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/2016/12/26/java-Exception-Handling/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/26/java-Exception-Handling/</guid>
        
        
        <category>Java</category>
        
      </item>
    
  </channel>
</rss>
